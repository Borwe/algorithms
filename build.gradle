/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

	// For supporting downloading of files
	id "de.undercouch.download" version "4.1.1"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
	mavenLocal()
	mavenCentral()
}

//for download args4.jar
task downloadAlgs4Jar(type: Download) {
		src 'https://algs4.cs.princeton.edu/code/algs4.jar'	
		dest projectDir 
		overwrite false
}

dependencies {
	implementation files('algs4.jar')
	
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

application {
    // Define the main class for the application.
    mainClassName = 'com.borwe.algorithms.App'
}

compileJava {
	dependsOn downloadAlgs4Jar
}

task stackexamp (type:JavaExec){
	main = "com.borwe.algorithms.algs.Stack"
	classpath = sourceSets.main.runtimeClasspath
}

task queueexamp (type:JavaExec){
	main = "com.borwe.algorithms.algs.Queue"
	classpath = sourceSets.main.runtimeClasspath
}

task ex1_3_3 (type:JavaExec){
    main = "com.borwe.algorithms.exercises.Ex1_3_3"
    classpath = sourceSets.main.runtimeClasspath
}

task ex1_3_4 (type:JavaExec){
    main = "com.borwe.algorithms.exercises.Ex1_3_4"
    classpath = sourceSets.main.runtimeClasspath
}

task ex1_3_9 (type:JavaExec){
	standardInput = System.in
    main = "com.borwe.algorithms.exercises.Ex1_3_9"
    classpath = sourceSets.main.runtimeClasspath
}


test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
